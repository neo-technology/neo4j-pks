version: 2
jobs:
  build:
    docker:
      - image: debian:stretch

    steps:
      - checkout

      - run:
          name: OS Setup
          command: |
            # Secure software install
            apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common            
            
            # Google Cloud stuff
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            
            # Docker stuff
            curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
            
            apt-get update && apt-get install -y wget make google-cloud-sdk docker-ce docker-ce-cli containerd.io

      - run:
          name: PKS Environment Setup / Auth to Pivotal Test Environment
          command: |
             bin/pks-linux login -a $PKS_ENDPOINT -u $PKS_USERNAME -p $PKS_PASSWORD -k
             bin/pks-linux get-credentials neo4j

      - run:
          name: Kubectl Setup
          command: |
             curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
             chmod +x kubectl
             ./kubectl config use-context neo4j                    

      - run:
          name: Install Helm
          command: |
             curl -LO https://storage.googleapis.com/kubernetes-helm/helm-v2.13.1-linux-amd64.tar.gz
             tar zxvf helm-v2.13.1-linux-amd64.tar.gz
             mv linux-amd64/helm .
             ./helm version

      - run: 
          name: Setup Google Tooling
          command: |
            echo $GCLOUD_SERVICE_KEY > service-key.json
            gcloud auth activate-service-account \
                neo4j-pks-build@neo4j-pivotal.iam.gserviceaccount.com \
                --key-file=service-key.json
            gcloud auth configure-docker

      - run:
          name: Build 
          command: |
             make SUFFIX=-$CIRCLE_BRANCH-$CIRCLE_SHA1 .build/neo4j/causal-cluster